services:
  traefik:
    image: traefik:v2.10
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:8008"
      #- "--entrypoints.websecure.address=:443"
      # - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      # - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      # - "--certificatesresolvers.myresolver.acme.email=your@email.com"
      # - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "8008:8008"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      #- ./letsencrypt:/letsencrypt
    networks:
      - web
    restart: unless-stopped

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: always
    command: redis-server --appendonly yes
    networks:
      - web

  urlshortener:
    build: .
    deploy:
      replicas: 3
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.url_shortener.rule=Host(`192.168.86.190`)"
      - "traefik.http.routers.url_shortener.entrypoints=web"
      - "traefik.http.services.url_shortener.loadbalancer.server.port=8080"
    environment:
      - DATABASE_FILE=/app/config/urls.db
      - SETTINGS_FILE=/app/config/settings.json
      - REDIS_URI=redis:6379
    volumes:
      - ./config:/app/config
    networks:
      - web
    restart: unless-stopped

networks:
  web:
    driver: bridge

volumes:
  redis-data:
